import string
import random

def generate_password(length=12, include_symbols=True, include_numbers=True, include_uppercase=True, complexity='easy'):
    password = ""

    # Define the character sets
    lowercase_letters = string.ascii_lowercase
    uppercase_letters = string.ascii_uppercase
    symbols = string.punctuation
    numbers = string.digits

    # Create the character pool based on user-specified criteria
    character_pool = lowercase_letters

    if complexity == 'easy':
        if include_symbols:
            character_pool += symbols

        if include_numbers:
            character_pool += numbers

        if include_uppercase:
            character_pool += uppercase_letters
    elif complexity == 'hard':
        character_pool = lowercase_letters + uppercase_letters + symbols + numbers

    # Generate the password
    for _ in range(length):
        password += random.choice(character_pool)

    return password

if __name__ == "__main__":
    while True:
        # Get user input for password criteria
        password_length = int(input("Enter desired password length: "))
        include_symbols = input("Include symbols (yes/no): ").lower() == "yes"
        include_numbers = input("Include numbers (yes/no): ").lower() == "yes"
        include_uppercase = input("Include uppercase letters (yes/no): ").lower() == "yes"
        complexity = input("Select password complexity (easy/hard): ").lower()

        # Generate and display the password
        generated_password = generate_password(password_length, include_symbols, include_numbers, include_uppercase, complexity)
        print("Your generated password is:", generated_password)

        # Ask if the user wants to try a new password
        try_new_password = input("Do you want to try a new password? (yes/no): ").lower()
        if try_new_password != "yes":
            break
